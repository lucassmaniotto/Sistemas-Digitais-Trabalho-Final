TimeQuest Timing Analyzer report for Tarefa4
Tue Jan 31 21:53:32 2023
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'KEY[0]'
 12. Slow Model Hold: 'KEY[0]'
 13. Slow Model Minimum Pulse Width: 'KEY[0]'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'KEY[0]'
 24. Fast Model Hold: 'KEY[0]'
 25. Fast Model Minimum Pulse Width: 'KEY[0]'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; Tarefa4                                            ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                             ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets    ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; KEY[0]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { KEY[0] } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 119.46 MHz ; 119.46 MHz      ; KEY[0]     ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+---------------------------------+
; Slow Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -7.371 ; -232.254      ;
+--------+--------+---------------+


+--------------------------------+
; Slow Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.634 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.469 ; -62.569              ;
+--------+--------+----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'KEY[0]'                                                                                                           ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -7.371 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.365      ;
; -7.369 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.407      ;
; -7.325 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.363      ;
; -7.324 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.362      ;
; -7.323 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.405      ;
; -7.322 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.404      ;
; -7.321 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.359      ;
; -7.319 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.401      ;
; -7.317 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.355      ;
; -7.315 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.397      ;
; -7.306 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.344      ;
; -7.305 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.343      ;
; -7.304 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.386      ;
; -7.303 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.385      ;
; -7.269 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.307      ;
; -7.223 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.305      ;
; -7.222 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.216      ;
; -7.222 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.304      ;
; -7.220 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.258      ;
; -7.215 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.209      ;
; -7.213 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.251      ;
; -7.207 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.201      ;
; -7.205 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.243      ;
; -7.205 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.243      ;
; -7.204 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.286      ;
; -7.203 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.285      ;
; -7.201 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.195      ;
; -7.199 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.237      ;
; -7.162 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.200      ;
; -7.159 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.241      ;
; -7.158 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.240      ;
; -7.156 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.374      ; 8.568      ;
; -7.155 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.237      ;
; -7.154 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.610      ;
; -7.153 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.380      ; 8.571      ;
; -7.151 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.233      ;
; -7.151 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.613      ;
; -7.140 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.222      ;
; -7.139 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.221      ;
; -7.120 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.158      ;
; -7.119 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.157      ;
; -7.119 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.157      ;
; -7.117 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.199      ;
; -7.117 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.199      ;
; -7.116 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.198      ;
; -7.115 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.197      ;
; -7.113 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.151      ;
; -7.112 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.194      ;
; -7.108 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.190      ;
; -7.105 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.143      ;
; -7.099 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.137      ;
; -7.099 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.137      ;
; -7.097 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.179      ;
; -7.096 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.178      ;
; -7.085 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.374      ; 8.497      ;
; -7.083 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.121      ;
; -7.083 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.539      ;
; -7.077 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.115      ;
; -7.056 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.094      ;
; -7.054 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.510      ;
; -7.051 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.513      ;
; -7.049 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.087      ;
; -7.041 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.079      ;
; -7.035 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.073      ;
; -7.034 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.116      ;
; -7.033 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.115      ;
; -7.032 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.488      ;
; -7.029 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.491      ;
; -7.017 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.099      ;
; -7.017 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.099      ;
; -7.013 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.051      ;
; -7.010 ; bo:operatorBlock|regH[2]  ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.044     ; 8.004      ;
; -7.006 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.044      ;
; -6.998 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.036      ;
; -6.995 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.077      ;
; -6.992 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 8.030      ;
; -6.990 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.446      ;
; -6.987 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.449      ;
; -6.983 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.439      ;
; -6.961 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.417      ;
; -6.958 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.418     ; 7.578      ;
; -6.953 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.035      ;
; -6.953 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.035      ;
; -6.950 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.988      ;
; -6.947 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.403      ;
; -6.945 ; bo:operatorBlock|regH[2]  ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.983      ;
; -6.944 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.406      ;
; -6.944 ; bo:operatorBlock|regH[2]  ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.982      ;
; -6.943 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.380      ; 8.361      ;
; -6.943 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.981      ;
; -6.941 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.424      ; 8.403      ;
; -6.926 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.008      ;
; -6.925 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 8.007      ;
; -6.919 ; bo:operatorBlock|regS[12] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.424     ; 7.533      ;
; -6.919 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.418      ; 8.375      ;
; -6.918 ; bo:operatorBlock|regS[3]  ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.956      ;
; -6.910 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 7.992      ;
; -6.910 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.044      ; 7.992      ;
; -6.907 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.945      ;
; -6.904 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.006      ; 7.948      ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'KEY[0]'                                                                                                           ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; 0.634 ; bc:comandBlock|state.0001 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.921      ;
; 0.773 ; bc:comandBlock|state.0011 ; bc:comandBlock|state.0100 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.059      ;
; 0.913 ; bc:comandBlock|state.0110 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.199      ;
; 0.922 ; bc:comandBlock|state.0001 ; bc:comandBlock|state.0010 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.208      ;
; 0.976 ; bc:comandBlock|state.0101 ; bc:comandBlock|state.0110 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.262      ;
; 0.980 ; bc:comandBlock|state.0100 ; bc:comandBlock|state.0101 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.266      ;
; 1.012 ; bc:comandBlock|state.0010 ; bc:comandBlock|state.0011 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.298      ;
; 1.057 ; bc:comandBlock|H          ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.761      ;
; 1.182 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 1.892      ;
; 1.182 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 1.892      ;
; 1.182 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 1.892      ;
; 1.182 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 1.892      ;
; 1.182 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 1.892      ;
; 1.195 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.899      ;
; 1.195 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.899      ;
; 1.195 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.899      ;
; 1.195 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.899      ;
; 1.195 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 1.899      ;
; 1.213 ; bc:comandBlock|state.0101 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.248      ;
; 1.214 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.249      ;
; 1.214 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.249      ;
; 1.404 ; bc:comandBlock|H          ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 2.114      ;
; 1.409 ; bc:comandBlock|H          ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 2.113      ;
; 1.410 ; bc:comandBlock|H          ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 2.114      ;
; 1.506 ; bc:comandBlock|state.0100 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.541      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.557 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.887      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.561 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 1.891      ;
; 1.581 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.867      ;
; 1.581 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.867      ;
; 1.581 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.867      ;
; 1.581 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.867      ;
; 1.581 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.867      ;
; 1.629 ; bc:comandBlock|state.0110 ; bc:comandBlock|M0[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.664      ;
; 1.653 ; bc:comandBlock|state.0010 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.688      ;
; 1.664 ; bc:comandBlock|H          ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 2.374      ;
; 1.668 ; bc:comandBlock|state.0011 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.703      ;
; 1.681 ; bc:comandBlock|state.0001 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.716      ;
; 1.682 ; bc:comandBlock|state.0001 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.717      ;
; 1.687 ; bc:comandBlock|state.0001 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.722      ;
; 1.688 ; bc:comandBlock|state.0001 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.723      ;
; 1.819 ; bc:comandBlock|state.0011 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.854      ;
; 1.822 ; bc:comandBlock|state.0011 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.857      ;
; 1.822 ; bc:comandBlock|state.0010 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.857      ;
; 1.823 ; bc:comandBlock|state.0110 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.858      ;
; 1.833 ; bc:comandBlock|state.0010 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.868      ;
; 1.851 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.137      ;
; 1.851 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.137      ;
; 1.851 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.137      ;
; 1.851 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.137      ;
; 1.851 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.137      ;
; 1.911 ; bc:comandBlock|state.0011 ; bc:comandBlock|M0[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.749      ; 2.946      ;
; 1.980 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.748      ; 3.014      ;
; 1.980 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.748      ; 3.014      ;
; 1.980 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.748      ; 3.014      ;
; 2.027 ; bc:comandBlock|H          ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 2.737      ;
; 2.045 ; bo:operatorBlock|regH[15] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.006      ; 2.337      ;
; 2.248 ; bc:comandBlock|H          ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 2.958      ;
; 2.258 ; bc:comandBlock|H          ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 2.968      ;
; 2.261 ; bc:comandBlock|H          ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 2.965      ;
; 2.264 ; bc:comandBlock|H          ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.418      ; 2.968      ;
; 2.332 ; bc:comandBlock|H          ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 2.662      ;
; 2.336 ; bc:comandBlock|H          ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 2.666      ;
; 2.338 ; bc:comandBlock|H          ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 2.668      ;
; 2.381 ; bc:comandBlock|H          ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.667      ;
; 2.383 ; bc:comandBlock|H          ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.669      ;
; 2.386 ; bc:comandBlock|H          ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.672      ;
; 2.412 ; bc:comandBlock|H          ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.698      ;
; 2.414 ; bc:comandBlock|H          ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.700      ;
; 2.431 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 3.141      ;
; 2.573 ; bo:operatorBlock|regS[15] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.859      ;
; 2.666 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 3.376      ;
; 2.824 ; bc:comandBlock|M2[1]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.424      ; 3.534      ;
; 2.883 ; bc:comandBlock|H          ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.169      ;
; 2.905 ; bo:operatorBlock|regH[15] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.191      ;
; 2.939 ; bo:operatorBlock|regH[13] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.006      ; 3.231      ;
; 2.963 ; bc:comandBlock|H          ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 3.293      ;
; 2.963 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.249      ;
; 2.964 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.374      ; 3.624      ;
; 2.972 ; bo:operatorBlock|regS[11] ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.006     ; 3.252      ;
; 2.985 ; bc:comandBlock|H          ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 3.315      ;
; 2.986 ; bc:comandBlock|H          ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 3.316      ;
; 2.992 ; bc:comandBlock|H          ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 3.322      ;
; 2.996 ; bc:comandBlock|H          ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.044      ; 3.326      ;
; 2.999 ; bc:comandBlock|H          ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.285      ;
; 3.001 ; bc:comandBlock|H          ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.287      ;
; 3.003 ; bc:comandBlock|H          ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.289      ;
; 3.008 ; bo:operatorBlock|regS[5]  ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.294      ;
; 3.036 ; bc:comandBlock|H          ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.322      ;
; 3.064 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.374      ; 3.724      ;
; 3.072 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.374      ; 3.732      ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'KEY[0]'                                                                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regX[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regX[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[2]  ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 4.540  ; 4.540  ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 4.540  ; 4.540  ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; -0.035 ; -0.035 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.035 ; -0.035 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; -0.317 ; -0.317 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.077 ; -0.077 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -3.831 ; -3.831 ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -3.831 ; -3.831 ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.565  ; 0.565  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.283  ; 0.283  ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.565  ; 0.565  ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.325  ; 0.325  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 31.578 ; 31.578 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 31.221 ; 31.221 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 31.579 ; 31.579 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 31.593 ; 31.593 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 31.600 ; 31.600 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 31.223 ; 31.223 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 31.213 ; 31.213 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 30.838 ; 30.838 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 30.840 ; 30.840 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 30.847 ; 30.847 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 30.858 ; 30.858 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 31.223 ; 31.223 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 31.099 ; 31.099 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 29.818 ; 29.818 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 29.696 ; 29.696 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 29.471 ; 29.471 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 29.513 ; 29.513 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 29.514 ; 29.514 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 29.710 ; 29.710 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 29.818 ; 29.818 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 29.792 ; 29.792 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 27.266 ; 27.266 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 27.262 ; 27.262 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 27.205 ; 27.205 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 26.886 ; 26.886 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 27.266 ; 27.266 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Minimum Clock to Output Times                                           ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 10.725 ; 10.725 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 11.082 ; 11.082 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 10.725 ; 10.725 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 11.084 ; 11.084 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 11.098 ; 11.098 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 11.104 ; 11.104 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 11.106 ; 11.106 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 11.105 ; 11.105 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 13.271 ; 13.271 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 13.648 ; 13.648 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 13.271 ; 13.271 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 13.271 ; 13.271 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 13.282 ; 13.282 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 13.291 ; 13.291 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 13.654 ; 13.654 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 13.536 ; 13.536 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 15.303 ; 15.303 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 15.528 ; 15.528 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 15.303 ; 15.303 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 15.345 ; 15.345 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 15.346 ; 15.346 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 15.542 ; 15.542 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 15.650 ; 15.650 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 15.624 ; 15.624 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 14.915 ; 14.915 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 15.291 ; 15.291 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 15.234 ; 15.234 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 14.915 ; 14.915 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 15.295 ; 15.295 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+---------------------------------+
; Fast Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -2.009 ; -50.342       ;
+--------+--------+---------------+


+--------------------------------+
; Fast Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.267 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.222 ; -51.222              ;
+--------+--------+----------------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'KEY[0]'                                                                                                          ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -2.009 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 3.041      ;
; -1.991 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.995      ;
; -1.923 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.955      ;
; -1.907 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.939      ;
; -1.904 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.936      ;
; -1.889 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.893      ;
; -1.870 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.930      ;
; -1.852 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.884      ;
; -1.833 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.865      ;
; -1.821 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.853      ;
; -1.813 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.845      ;
; -1.811 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.871      ;
; -1.807 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.838      ;
; -1.802 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.834      ;
; -1.795 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.799      ;
; -1.793 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.825      ;
; -1.784 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.844      ;
; -1.765 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.825      ;
; -1.759 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.791      ;
; -1.754 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.786      ;
; -1.751 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.961      ;
; -1.742 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.952      ;
; -1.741 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.745      ;
; -1.738 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.953      ;
; -1.733 ; bo:operatorBlock|regX[0] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.764      ;
; -1.733 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.150      ; 2.915      ;
; -1.731 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.763      ;
; -1.727 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.759      ;
; -1.725 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.785      ;
; -1.724 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.150      ; 2.906      ;
; -1.720 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.155      ; 2.907      ;
; -1.708 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.740      ;
; -1.706 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.766      ;
; -1.705 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.736      ;
; -1.695 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.910      ;
; -1.694 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.754      ;
; -1.686 ; bo:operatorBlock|regX[1] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.717      ;
; -1.677 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.155      ; 2.864      ;
; -1.673 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.705      ;
; -1.668 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.027      ; 2.727      ;
; -1.665 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.875      ;
; -1.658 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.718      ;
; -1.657 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.717      ;
; -1.656 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.866      ;
; -1.654 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.686      ;
; -1.653 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.685      ;
; -1.652 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.867      ;
; -1.652 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.684      ;
; -1.648 ; bo:operatorBlock|regS[2] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.652      ;
; -1.646 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.856      ;
; -1.640 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.672      ;
; -1.639 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.671      ;
; -1.637 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.669      ;
; -1.637 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.847      ;
; -1.635 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.695      ;
; -1.635 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.639      ;
; -1.633 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.848      ;
; -1.631 ; bo:operatorBlock|regX[0] ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.662      ;
; -1.617 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.832      ;
; -1.615 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.675      ;
; -1.611 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.642      ;
; -1.609 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.027      ; 2.668      ;
; -1.609 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.824      ;
; -1.599 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.155      ; 2.786      ;
; -1.594 ; bo:operatorBlock|regX[0] ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.027      ; 2.653      ;
; -1.590 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.805      ;
; -1.584 ; bo:operatorBlock|regX[1] ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.615      ;
; -1.583 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.615      ;
; -1.575 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.785      ;
; -1.572 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.632      ;
; -1.571 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.631      ;
; -1.569 ; bo:operatorBlock|regH[2] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.573      ;
; -1.567 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.599      ;
; -1.566 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.178      ; 2.776      ;
; -1.562 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.594      ;
; -1.562 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.777      ;
; -1.558 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.773      ;
; -1.558 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.590      ;
; -1.557 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.588      ;
; -1.556 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.616      ;
; -1.556 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.616      ;
; -1.555 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.615      ;
; -1.553 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.613      ;
; -1.552 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.612      ;
; -1.549 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.177      ; 2.758      ;
; -1.548 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.580      ;
; -1.547 ; bo:operatorBlock|regX[1] ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.027      ; 2.606      ;
; -1.546 ; bo:operatorBlock|regS[2] ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.550      ;
; -1.545 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.577      ;
; -1.544 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.028     ; 2.548      ;
; -1.540 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.177      ; 2.749      ;
; -1.540 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.155      ; 2.727      ;
; -1.538 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.570      ;
; -1.538 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.570      ;
; -1.537 ; bo:operatorBlock|regX[0] ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.001     ; 2.568      ;
; -1.537 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.569      ;
; -1.536 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.028      ; 2.596      ;
; -1.536 ; bo:operatorBlock|regX[2] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.182      ; 2.750      ;
; -1.535 ; bo:operatorBlock|regX[0] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.027      ; 2.594      ;
; -1.531 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.183      ; 2.746      ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'KEY[0]'                                                                                                           ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; 0.267 ; bc:comandBlock|state.0001 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.420      ;
; 0.317 ; bc:comandBlock|state.0011 ; bc:comandBlock|state.0100 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.469      ;
; 0.364 ; bc:comandBlock|state.0110 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.516      ;
; 0.368 ; bc:comandBlock|state.0100 ; bc:comandBlock|state.0101 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.520      ;
; 0.368 ; bc:comandBlock|state.0101 ; bc:comandBlock|state.0110 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.520      ;
; 0.369 ; bc:comandBlock|state.0001 ; bc:comandBlock|state.0010 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.521      ;
; 0.376 ; bc:comandBlock|state.0010 ; bc:comandBlock|state.0011 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.528      ;
; 0.390 ; bc:comandBlock|H          ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.720      ;
; 0.495 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 0.958      ;
; 0.495 ; bc:comandBlock|state.0101 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 0.958      ;
; 0.495 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 0.958      ;
; 0.511 ; bc:comandBlock|H          ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.846      ;
; 0.514 ; bc:comandBlock|H          ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.844      ;
; 0.515 ; bc:comandBlock|H          ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.845      ;
; 0.520 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.855      ;
; 0.520 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.855      ;
; 0.520 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.855      ;
; 0.520 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.855      ;
; 0.520 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.855      ;
; 0.531 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.861      ;
; 0.531 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.861      ;
; 0.531 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.861      ;
; 0.531 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.861      ;
; 0.531 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 0.861      ;
; 0.538 ; bc:comandBlock|state.0100 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.001      ;
; 0.601 ; bc:comandBlock|state.0110 ; bc:comandBlock|M0[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.064      ;
; 0.611 ; bc:comandBlock|state.0010 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.074      ;
; 0.631 ; bc:comandBlock|state.0001 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.094      ;
; 0.634 ; bc:comandBlock|state.0011 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.097      ;
; 0.634 ; bc:comandBlock|state.0001 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.097      ;
; 0.636 ; bc:comandBlock|H          ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 0.971      ;
; 0.637 ; bc:comandBlock|state.0001 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.100      ;
; 0.639 ; bc:comandBlock|state.0001 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.102      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.671 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.851      ;
; 0.672 ; bc:comandBlock|state.0011 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.135      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.673 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 0.853      ;
; 0.676 ; bc:comandBlock|state.0011 ; bc:comandBlock|M0[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.139      ;
; 0.679 ; bc:comandBlock|state.0011 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.142      ;
; 0.679 ; bc:comandBlock|state.0010 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.142      ;
; 0.684 ; bc:comandBlock|state.0010 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.147      ;
; 0.686 ; bc:comandBlock|state.0110 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.149      ;
; 0.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.843      ;
; 0.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.843      ;
; 0.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.843      ;
; 0.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.843      ;
; 0.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.843      ;
; 0.764 ; bc:comandBlock|H          ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.099      ;
; 0.783 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.935      ;
; 0.783 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.935      ;
; 0.783 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.935      ;
; 0.783 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.935      ;
; 0.783 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.935      ;
; 0.783 ; bo:operatorBlock|regH[15] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.005      ; 0.940      ;
; 0.841 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.304      ;
; 0.841 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.304      ;
; 0.841 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.311      ; 1.304      ;
; 0.841 ; bc:comandBlock|H          ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.176      ;
; 0.852 ; bc:comandBlock|H          ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.187      ;
; 0.853 ; bc:comandBlock|H          ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 1.183      ;
; 0.856 ; bc:comandBlock|H          ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 1.186      ;
; 0.874 ; bc:comandBlock|H          ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 1.054      ;
; 0.878 ; bc:comandBlock|H          ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 1.058      ;
; 0.880 ; bc:comandBlock|H          ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.028      ; 1.060      ;
; 0.880 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.215      ;
; 0.905 ; bc:comandBlock|H          ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.057      ;
; 0.907 ; bc:comandBlock|H          ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.059      ;
; 0.908 ; bc:comandBlock|H          ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.060      ;
; 0.908 ; bc:comandBlock|H          ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.060      ;
; 0.909 ; bc:comandBlock|H          ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.061      ;
; 0.932 ; bo:operatorBlock|regS[15] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.084      ;
; 0.959 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.294      ;
; 0.998 ; bo:operatorBlock|regS[8]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 1.328      ;
; 0.999 ; bo:operatorBlock|regS[7]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 1.329      ;
; 1.016 ; bc:comandBlock|M2[1]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.183      ; 1.351      ;
; 1.018 ; bo:operatorBlock|regH[1]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.320      ;
; 1.022 ; bo:operatorBlock|regS[2]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.324      ;
; 1.023 ; bo:operatorBlock|regH[0]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.325      ;
; 1.023 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.325      ;
; 1.040 ; bc:comandBlock|M2[1]      ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.178      ; 1.370      ;
; 1.047 ; bo:operatorBlock|regS[9]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.349      ;
; 1.047 ; bo:operatorBlock|regX[1]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.177      ; 1.376      ;
; 1.067 ; bo:operatorBlock|regS[4]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.369      ;
; 1.070 ; bo:operatorBlock|regS[11] ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.005     ; 1.217      ;
; 1.072 ; bc:comandBlock|H          ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.224      ;
; 1.072 ; bo:operatorBlock|regH[9]  ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.374      ;
; 1.074 ; bo:operatorBlock|regS[12] ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.005     ; 1.221      ;
; 1.081 ; bo:operatorBlock|regS[1]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.383      ;
; 1.084 ; bo:operatorBlock|regH[13] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.005      ; 1.241      ;
; 1.085 ; bo:operatorBlock|regS[5]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.387      ;
; 1.096 ; bo:operatorBlock|regS[9]  ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.150      ; 1.398      ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'KEY[0]'                                                                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regX[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regX[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regX[2]  ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 2.528  ; 2.528  ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 2.528  ; 2.528  ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; -0.125 ; -0.125 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.127 ; -0.127 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; -0.205 ; -0.205 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.125 ; -0.125 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -2.137 ; -2.137 ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -2.137 ; -2.137 ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.325  ; 0.325  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.247  ; 0.247  ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.325  ; 0.325  ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.245  ; 0.245  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 12.412 ; 12.412 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 12.376 ; 12.376 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 12.248 ; 12.248 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 12.394 ; 12.394 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 12.399 ; 12.399 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 12.412 ; 12.412 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 12.410 ; 12.410 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 12.412 ; 12.412 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 12.234 ; 12.234 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 12.226 ; 12.226 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 12.064 ; 12.064 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 12.065 ; 12.065 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 12.072 ; 12.072 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 12.084 ; 12.084 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 12.234 ; 12.234 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 12.176 ; 12.176 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 11.708 ; 11.708 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 11.635 ; 11.635 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 11.556 ; 11.556 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 11.599 ; 11.599 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 11.600 ; 11.600 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 11.648 ; 11.648 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 11.693 ; 11.693 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 11.708 ; 11.708 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 10.792 ; 10.792 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 10.787 ; 10.787 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 10.749 ; 10.749 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 10.625 ; 10.625 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 10.792 ; 10.792 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 4.952 ; 4.952 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 4.976 ; 4.976 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 4.981 ; 4.981 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 4.994 ; 4.994 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 4.992 ; 4.992 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 4.995 ; 4.995 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 5.820 ; 5.820 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 5.988 ; 5.988 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 5.821 ; 5.821 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 5.820 ; 5.820 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 5.833 ; 5.833 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 5.862 ; 5.862 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 5.988 ; 5.988 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 5.937 ; 5.937 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 6.448 ; 6.448 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 6.527 ; 6.527 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 6.448 ; 6.448 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 6.491 ; 6.491 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 6.492 ; 6.492 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 6.540 ; 6.540 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 6.585 ; 6.585 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 6.600 ; 6.600 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 6.265 ; 6.265 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 6.427 ; 6.427 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 6.389 ; 6.389 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 6.265 ; 6.265 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 6.432 ; 6.432 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -7.371   ; 0.267 ; N/A      ; N/A     ; -1.469              ;
;  KEY[0]          ; -7.371   ; 0.267 ; N/A      ; N/A     ; -1.469              ;
; Design-wide TNS  ; -232.254 ; 0.0   ; 0.0      ; 0.0     ; -62.569             ;
;  KEY[0]          ; -232.254 ; 0.000 ; N/A      ; N/A     ; -62.569             ;
+------------------+----------+-------+----------+---------+---------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 4.540  ; 4.540  ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 4.540  ; 4.540  ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; -0.035 ; -0.035 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.035 ; -0.035 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; -0.205 ; -0.205 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.077 ; -0.077 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -2.137 ; -2.137 ; Rise       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -2.137 ; -2.137 ; Rise       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.565  ; 0.565  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.283  ; 0.283  ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.565  ; 0.565  ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.325  ; 0.325  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 31.578 ; 31.578 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 31.221 ; 31.221 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 31.579 ; 31.579 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 31.593 ; 31.593 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 31.600 ; 31.600 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 31.601 ; 31.601 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 31.223 ; 31.223 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 31.213 ; 31.213 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 30.838 ; 30.838 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 30.840 ; 30.840 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 30.847 ; 30.847 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 30.858 ; 30.858 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 31.223 ; 31.223 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 31.099 ; 31.099 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 29.818 ; 29.818 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 29.696 ; 29.696 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 29.471 ; 29.471 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 29.513 ; 29.513 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 29.514 ; 29.514 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 29.710 ; 29.710 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 29.818 ; 29.818 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 29.792 ; 29.792 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 27.266 ; 27.266 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 27.262 ; 27.262 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 27.205 ; 27.205 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 26.886 ; 26.886 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 27.266 ; 27.266 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 4.952 ; 4.952 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 4.976 ; 4.976 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 4.981 ; 4.981 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 4.994 ; 4.994 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 4.992 ; 4.992 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 4.995 ; 4.995 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 5.820 ; 5.820 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 5.988 ; 5.988 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 5.821 ; 5.821 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 5.820 ; 5.820 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 5.833 ; 5.833 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 5.862 ; 5.862 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 5.988 ; 5.988 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 5.937 ; 5.937 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 6.448 ; 6.448 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 6.527 ; 6.527 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 6.448 ; 6.448 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 6.491 ; 6.491 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 6.492 ; 6.492 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 6.540 ; 6.540 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 6.585 ; 6.585 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 6.600 ; 6.600 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 6.265 ; 6.265 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 6.427 ; 6.427 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 6.389 ; 6.389 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 6.265 ; 6.265 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 6.432 ; 6.432 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 4199     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 4199     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 4     ; 4    ;
; Unconstrained Input Port Paths  ; 18    ; 18   ;
; Unconstrained Output Ports      ; 25    ; 25   ;
; Unconstrained Output Port Paths ; 217   ; 217  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Tue Jan 31 21:53:31 2023
Info: Command: quartus_sta Tarefa4 -c Tarefa4
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Tarefa4.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name KEY[0] KEY[0]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -7.371
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -7.371      -232.254 KEY[0] 
Info (332146): Worst-case hold slack is 0.634
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.634         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469       -62.569 KEY[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.009
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.009       -50.342 KEY[0] 
Info (332146): Worst-case hold slack is 0.267
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.267         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -51.222 KEY[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 4550 megabytes
    Info: Processing ended: Tue Jan 31 21:53:32 2023
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


