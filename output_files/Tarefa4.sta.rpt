TimeQuest Timing Analyzer report for Tarefa4
Tue Feb 07 21:45:56 2023
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'KEY[0]'
 12. Slow Model Hold: 'KEY[0]'
 13. Slow Model Minimum Pulse Width: 'KEY[0]'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'KEY[0]'
 24. Fast Model Hold: 'KEY[0]'
 25. Fast Model Minimum Pulse Width: 'KEY[0]'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; Tarefa4                                            ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                             ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets    ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+
; KEY[0]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { KEY[0] } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+------------+


+-------------------------------------------------+
; Slow Model Fmax Summary                         ;
+-----------+-----------------+------------+------+
; Fmax      ; Restricted Fmax ; Clock Name ; Note ;
+-----------+-----------------+------------+------+
; 129.9 MHz ; 129.9 MHz       ; KEY[0]     ;      ;
+-----------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+---------------------------------+
; Slow Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -6.698 ; -248.334      ;
+--------+--------+---------------+


+--------------------------------+
; Slow Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.445 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.469 ; -67.457              ;
+--------+--------+----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'KEY[0]'                                                                                                           ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -6.698 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 8.044      ;
; -6.693 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 8.041      ;
; -6.682 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 8.028      ;
; -6.682 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.718      ;
; -6.677 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.715      ;
; -6.676 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 8.024      ;
; -6.673 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 8.021      ;
; -6.666 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.702      ;
; -6.660 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.698      ;
; -6.657 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 8.005      ;
; -6.657 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.695      ;
; -6.641 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.679      ;
; -6.627 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.902      ;
; -6.625 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.900      ;
; -6.624 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.970      ;
; -6.619 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.967      ;
; -6.611 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.576      ;
; -6.609 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.574      ;
; -6.608 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.644      ;
; -6.608 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.954      ;
; -6.607 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.882      ;
; -6.603 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.641      ;
; -6.602 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.950      ;
; -6.599 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.947      ;
; -6.596 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 7.842      ;
; -6.593 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.868      ;
; -6.592 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.628      ;
; -6.591 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.556      ;
; -6.589 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.864      ;
; -6.583 ; bo:operatorBlock|regH[11] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.621      ;
; -6.583 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.931      ;
; -6.580 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.102     ; 7.516      ;
; -6.577 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.542      ;
; -6.574 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.258      ; 7.870      ;
; -6.573 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.848      ;
; -6.573 ; bo:operatorBlock|regS[14] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.611      ;
; -6.573 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.538      ;
; -6.564 ; bo:operatorBlock|regS[14] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.002      ; 7.604      ;
; -6.558 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.906      ;
; -6.557 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.903      ;
; -6.557 ; bo:operatorBlock|regH[12] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.593      ;
; -6.557 ; bo:operatorBlock|regH[13] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.593      ;
; -6.557 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.073     ; 7.522      ;
; -6.556 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.258      ; 7.852      ;
; -6.553 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.828      ;
; -6.552 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.880      ;
; -6.551 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.826      ;
; -6.550 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.878      ;
; -6.548 ; bo:operatorBlock|regH[12] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.586      ;
; -6.548 ; bo:operatorBlock|regH[13] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.586      ;
; -6.544 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.892      ;
; -6.543 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.889      ;
; -6.542 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.890      ;
; -6.542 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.580      ;
; -6.541 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.577      ;
; -6.540 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.886      ;
; -6.540 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.052     ; 7.526      ;
; -6.535 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.883      ;
; -6.534 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.020     ; 7.552      ;
; -6.533 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.808      ;
; -6.529 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.018      ; 7.585      ;
; -6.528 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.566      ;
; -6.527 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.873      ;
; -6.527 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.563      ;
; -6.526 ; bo:operatorBlock|regH[15] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.564      ;
; -6.526 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.564      ;
; -6.525 ; bc:comandBlock|M0[0]      ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.853      ;
; -6.525 ; bo:operatorBlock|regH[15] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.561      ;
; -6.524 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.020      ; 7.582      ;
; -6.524 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.560      ;
; -6.522 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.870      ;
; -6.522 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 7.768      ;
; -6.521 ; bo:operatorBlock|regS[13] ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.559      ;
; -6.519 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.794      ;
; -6.519 ; bo:operatorBlock|regH[3]  ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.557      ;
; -6.515 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.790      ;
; -6.513 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.018      ; 7.569      ;
; -6.512 ; bo:operatorBlock|regS[13] ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.002      ; 7.552      ;
; -6.511 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.857      ;
; -6.507 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.020      ; 7.565      ;
; -6.505 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.258      ; 7.801      ;
; -6.505 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.853      ;
; -6.504 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.020      ; 7.562      ;
; -6.502 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.850      ;
; -6.500 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.258      ; 7.796      ;
; -6.499 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.237      ; 7.774      ;
; -6.495 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.841      ;
; -6.490 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.838      ;
; -6.488 ; bo:operatorBlock|regS[0]  ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.020      ; 7.546      ;
; -6.486 ; bc:comandBlock|M1[0]      ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.834      ;
; -6.484 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.832      ;
; -6.483 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.829      ;
; -6.482 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.258      ; 7.778      ;
; -6.481 ; bo:operatorBlock|regH[4]  ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.002     ; 7.517      ;
; -6.479 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.308      ; 7.825      ;
; -6.478 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.806      ;
; -6.476 ; bo:operatorBlock|regH[4]  ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 7.514      ;
; -6.476 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.804      ;
; -6.473 ; bc:comandBlock|M1[1]      ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 7.821      ;
; -6.471 ; bc:comandBlock|M0[1]      ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.290      ; 7.799      ;
+--------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'KEY[0]'                                                                                                           ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; 0.445 ; bc:comandBlock|LS         ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bc:comandBlock|flag       ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bc:comandBlock|LX         ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.638 ; bc:comandBlock|state.0011 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.925      ;
; 0.822 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.258      ; 1.366      ;
; 0.822 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.258      ; 1.366      ;
; 0.822 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.258      ; 1.366      ;
; 0.973 ; bc:comandBlock|state.0001 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.260      ;
; 0.982 ; bc:comandBlock|state.0001 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.269      ;
; 0.992 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.289      ; 1.567      ;
; 1.050 ; bc:comandBlock|state.0000 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.337      ;
; 1.052 ; bc:comandBlock|state.0000 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.338      ;
; 1.052 ; bc:comandBlock|state.0000 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.339      ;
; 1.119 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.318      ; 1.723      ;
; 1.120 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.318      ; 1.724      ;
; 1.123 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.318      ; 1.727      ;
; 1.267 ; bc:comandBlock|H          ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.257      ; 1.810      ;
; 1.269 ; bc:comandBlock|H          ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.257      ; 1.812      ;
; 1.269 ; bc:comandBlock|H          ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 1.791      ;
; 1.270 ; bc:comandBlock|H          ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.257      ; 1.813      ;
; 1.270 ; bc:comandBlock|H          ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 1.792      ;
; 1.273 ; bc:comandBlock|H          ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 1.795      ;
; 1.309 ; bc:comandBlock|H          ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.207      ; 1.802      ;
; 1.528 ; bc:comandBlock|state.0001 ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.081     ; 1.733      ;
; 1.540 ; bc:comandBlock|H          ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.826      ;
; 1.541 ; bc:comandBlock|state.0111 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.577      ; 2.404      ;
; 1.565 ; bc:comandBlock|state.0011 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.852      ;
; 1.629 ; bc:comandBlock|state.0000 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 1.916      ;
; 1.686 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.207      ; 2.179      ;
; 1.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.237      ; 2.214      ;
; 1.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.237      ; 2.214      ;
; 1.691 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.237      ; 2.214      ;
; 1.743 ; bc:comandBlock|state.0010 ; bc:comandBlock|state.0011 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.577      ; 2.606      ;
; 1.749 ; bc:comandBlock|state.0100 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.578      ; 2.613      ;
; 1.801 ; bc:comandBlock|state.0111 ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.496      ; 2.583      ;
; 1.811 ; bc:comandBlock|state.0101 ; bc:comandBlock|state.0110 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.496      ; 2.593      ;
; 1.852 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.374      ;
; 1.852 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.374      ;
; 1.852 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.374      ;
; 1.918 ; bc:comandBlock|H          ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.513      ;
; 1.919 ; bc:comandBlock|H          ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.514      ;
; 1.921 ; bc:comandBlock|H          ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 2.514      ;
; 1.928 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.603      ;
; 1.929 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.604      ;
; 1.983 ; bc:comandBlock|H          ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.505      ;
; 1.984 ; bc:comandBlock|H          ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.506      ;
; 1.986 ; bc:comandBlock|H          ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.236      ; 2.508      ;
; 2.000 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.675      ;
; 2.001 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.676      ;
; 2.003 ; bc:comandBlock|state.0011 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.289      ;
; 2.011 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.668      ;
; 2.011 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.668      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.034 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 2.630      ;
; 2.071 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.746      ;
; 2.083 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.389      ; 2.758      ;
; 2.149 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.806      ;
; 2.150 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.807      ;
; 2.155 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.812      ;
; 2.158 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.371      ; 2.815      ;
; 2.162 ; bc:comandBlock|state.0000 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.448      ;
; 2.176 ; bc:comandBlock|state.0000 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.462      ;
; 2.179 ; bc:comandBlock|state.0000 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.465      ;
; 2.180 ; bc:comandBlock|state.0000 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.466      ;
; 2.229 ; bc:comandBlock|H          ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.824      ;
; 2.233 ; bc:comandBlock|H          ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.828      ;
; 2.236 ; bc:comandBlock|H          ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.831      ;
; 2.237 ; bc:comandBlock|H          ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.832      ;
; 2.251 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.012      ; 2.549      ;
; 2.251 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.012      ; 2.549      ;
; 2.251 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.012      ; 2.549      ;
; 2.251 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.012      ; 2.549      ;
; 2.259 ; bc:comandBlock|H          ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.854      ;
; 2.261 ; bc:comandBlock|H          ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 2.856      ;
; 2.323 ; bc:comandBlock|state.0010 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.578      ; 3.187      ;
; 2.328 ; bc:comandBlock|M2[1]      ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.614      ;
; 2.331 ; bc:comandBlock|M1[1]      ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.617      ;
; 2.362 ; bc:comandBlock|state.0011 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.648      ;
; 2.362 ; bc:comandBlock|state.0000 ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.648      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.419 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.012      ;
; 2.571 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.577      ; 3.434      ;
; 2.581 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.297      ; 3.164      ;
; 2.655 ; bc:comandBlock|LH         ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.941      ;
; 2.679 ; bc:comandBlock|H          ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.309      ; 3.274      ;
; 2.679 ; bc:comandBlock|H          ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 3.272      ;
; 2.688 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.577      ; 3.551      ;
; 2.690 ; bc:comandBlock|state.0011 ; bc:comandBlock|M0[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.976      ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'KEY[0]'                                                                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|flag       ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|flag       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0000 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0000 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0111 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0111 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 2.853  ; 2.853  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.404 ; -0.404 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.050  ; 0.050  ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.416 ; -0.416 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -0.542 ; -0.542 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 2.853  ; 2.853  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 0.790 ; 0.790 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.652 ; 0.652 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.198 ; 0.198 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.664 ; 0.664 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 0.790 ; 0.790 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 0.163 ; 0.163 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 31.266 ; 31.266 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 30.870 ; 30.870 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 30.902 ; 30.902 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 31.246 ; 31.246 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 31.129 ; 31.129 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 31.265 ; 31.265 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 31.266 ; 31.266 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 31.260 ; 31.260 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 32.756 ; 32.756 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 31.800 ; 31.800 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 32.374 ; 32.374 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 32.369 ; 32.369 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 32.383 ; 32.383 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 32.387 ; 32.387 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 32.629 ; 32.629 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 32.756 ; 32.756 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 31.125 ; 31.125 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 30.780 ; 30.780 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 30.808 ; 30.808 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 30.825 ; 30.825 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 30.835 ; 30.835 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 30.815 ; 30.815 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 30.799 ; 30.799 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 31.125 ; 31.125 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 28.475 ; 28.475 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 28.453 ; 28.453 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Minimum Clock to Output Times                                           ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 10.219 ; 10.219 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 10.219 ; 10.219 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 10.248 ; 10.248 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 10.585 ; 10.585 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 10.461 ; 10.461 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 10.616 ; 10.616 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 10.601 ; 10.601 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 10.608 ; 10.608 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 13.921 ; 13.921 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 13.921 ; 13.921 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 13.948 ; 13.948 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 13.945 ; 13.945 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 13.958 ; 13.958 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 13.963 ; 13.963 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 14.201 ; 14.201 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 14.330 ; 14.330 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 14.740 ; 14.740 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 14.740 ; 14.740 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 14.772 ; 14.772 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 14.796 ; 14.796 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 14.794 ; 14.794 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 14.775 ; 14.775 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 14.770 ; 14.770 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 15.043 ; 15.043 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 14.970 ; 14.970 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 15.009 ; 15.009 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 14.992 ; 14.992 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 14.970 ; 14.970 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 15.009 ; 15.009 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+---------------------------------+
; Fast Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -1.470 ; -41.320       ;
+--------+--------+---------------+


+--------------------------------+
; Fast Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.215 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+--------+--------+----------------------+
; Clock  ; Slack  ; End Point TNS        ;
+--------+--------+----------------------+
; KEY[0] ; -1.222 ; -55.222              ;
+--------+--------+----------------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'KEY[0]'                                                                                                          ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; -1.470 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.620      ;
; -1.452 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.602      ;
; -1.433 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.465      ;
; -1.430 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.472      ;
; -1.413 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.455      ;
; -1.408 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.440      ;
; -1.402 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.552      ;
; -1.397 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.547      ;
; -1.389 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.539      ;
; -1.384 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.534      ;
; -1.365 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.397      ;
; -1.362 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.404      ;
; -1.360 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.467      ;
; -1.358 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.466      ;
; -1.345 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.387      ;
; -1.342 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.449      ;
; -1.340 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.372      ;
; -1.340 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.448      ;
; -1.334 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.441      ;
; -1.329 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.479      ;
; -1.328 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.436      ;
; -1.323 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.312      ;
; -1.321 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.471      ;
; -1.321 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.042     ; 2.311      ;
; -1.320 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.319      ;
; -1.319 ; bo:operatorBlock|regH[2] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.351      ;
; -1.318 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.032     ; 2.318      ;
; -1.316 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.423      ;
; -1.310 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.418      ;
; -1.303 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.453      ;
; -1.303 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.302      ;
; -1.302 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.452      ;
; -1.301 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.032     ; 2.301      ;
; -1.298 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.287      ;
; -1.297 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.286      ;
; -1.296 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.042     ; 2.286      ;
; -1.294 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.293      ;
; -1.291 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.398      ;
; -1.291 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.042     ; 2.281      ;
; -1.288 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.032     ; 2.288      ;
; -1.287 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.394      ;
; -1.285 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.435      ;
; -1.285 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.393      ;
; -1.284 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.434      ;
; -1.279 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.386      ;
; -1.277 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.385      ;
; -1.277 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.276      ;
; -1.273 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.380      ;
; -1.272 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.261      ;
; -1.271 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.032     ; 2.271      ;
; -1.267 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.417      ;
; -1.266 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.042     ; 2.256      ;
; -1.266 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.298      ;
; -1.265 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.297      ;
; -1.263 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.305      ;
; -1.262 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.304      ;
; -1.261 ; bo:operatorBlock|regX[3] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.111      ; 2.404      ;
; -1.261 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.368      ;
; -1.255 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.363      ;
; -1.254 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.243      ;
; -1.253 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.360      ;
; -1.251 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.060      ; 2.343      ;
; -1.251 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.250      ;
; -1.251 ; bo:operatorBlock|regH[2] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.283      ;
; -1.247 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.355      ;
; -1.246 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.288      ;
; -1.245 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.395      ;
; -1.245 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.287      ;
; -1.244 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.394      ;
; -1.241 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.273      ;
; -1.240 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.272      ;
; -1.239 ; bo:operatorBlock|regH[0] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.032      ; 2.303      ;
; -1.238 ; bo:operatorBlock|regS[4] ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.042      ; 2.312      ;
; -1.234 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.033     ; 2.233      ;
; -1.233 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.060      ; 2.325      ;
; -1.230 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.380      ;
; -1.229 ; bo:operatorBlock|regH[4] ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.218      ;
; -1.229 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.379      ;
; -1.227 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.377      ;
; -1.226 ; bc:comandBlock|M0[0]     ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.376      ;
; -1.222 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.372      ;
; -1.221 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.371      ;
; -1.218 ; bc:comandBlock|M1[1]     ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.325      ;
; -1.214 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.058     ; 2.188      ;
; -1.211 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.048     ; 2.195      ;
; -1.210 ; bc:comandBlock|M1[0]     ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.075      ; 2.317      ;
; -1.209 ; bo:operatorBlock|regH[2] ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.043     ; 2.198      ;
; -1.208 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.240      ;
; -1.207 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.357      ;
; -1.207 ; bo:operatorBlock|regH[3] ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.000      ; 2.239      ;
; -1.207 ; bo:operatorBlock|regH[2] ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.042     ; 2.197      ;
; -1.206 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.356      ;
; -1.205 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.247      ;
; -1.204 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.076      ; 2.312      ;
; -1.204 ; bo:operatorBlock|regS[0] ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.010      ; 2.246      ;
; -1.199 ; bc:comandBlock|M2[1]     ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.349      ;
; -1.194 ; bo:operatorBlock|regS[1] ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.048     ; 2.178      ;
; -1.193 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.343      ;
; -1.193 ; bo:operatorBlock|regX[3] ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.111      ; 2.336      ;
; -1.192 ; bc:comandBlock|M0[1]     ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.118      ; 2.342      ;
+--------+--------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'KEY[0]'                                                                                                           ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                   ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; bc:comandBlock|LS         ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bc:comandBlock|flag       ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bc:comandBlock|LX         ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.248 ; bc:comandBlock|state.0011 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.401      ;
; 0.361 ; bc:comandBlock|state.0001 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.514      ;
; 0.364 ; bc:comandBlock|state.0001 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.517      ;
; 0.374 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.107      ; 0.633      ;
; 0.389 ; bc:comandBlock|state.0000 ; bc:comandBlock|LS         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.542      ;
; 0.389 ; bc:comandBlock|state.0000 ; bc:comandBlock|LX         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.542      ;
; 0.390 ; bc:comandBlock|state.0000 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.542      ;
; 0.423 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.086      ; 0.661      ;
; 0.423 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.086      ; 0.661      ;
; 0.423 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.086      ; 0.661      ;
; 0.437 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.123      ; 0.712      ;
; 0.439 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.123      ; 0.714      ;
; 0.441 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.123      ; 0.716      ;
; 0.489 ; bc:comandBlock|H          ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.082      ; 0.723      ;
; 0.490 ; bc:comandBlock|H          ; bo:operatorBlock|regH[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.093      ; 0.735      ;
; 0.491 ; bc:comandBlock|H          ; bo:operatorBlock|regH[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.093      ; 0.736      ;
; 0.492 ; bc:comandBlock|H          ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.082      ; 0.726      ;
; 0.493 ; bc:comandBlock|H          ; bo:operatorBlock|regH[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.093      ; 0.738      ;
; 0.494 ; bc:comandBlock|H          ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.082      ; 0.728      ;
; 0.507 ; bc:comandBlock|H          ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.067      ; 0.726      ;
; 0.581 ; bc:comandBlock|state.0011 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.734      ;
; 0.582 ; bc:comandBlock|state.0001 ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.039     ; 0.695      ;
; 0.586 ; bc:comandBlock|H          ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.738      ;
; 0.604 ; bc:comandBlock|state.0000 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.001      ; 0.757      ;
; 0.609 ; bc:comandBlock|state.0111 ; bc:comandBlock|state.0001 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.257      ; 1.018      ;
; 0.617 ; bc:comandBlock|state.0010 ; bc:comandBlock|state.0011 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.257      ; 1.026      ;
; 0.624 ; bc:comandBlock|state.0100 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.258      ; 1.034      ;
; 0.701 ; bc:comandBlock|state.0101 ; bc:comandBlock|state.0110 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.218      ; 1.071      ;
; 0.703 ; bc:comandBlock|state.0111 ; bc:comandBlock|flag       ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.218      ; 1.073      ;
; 0.737 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.054      ;
; 0.737 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.054      ;
; 0.742 ; bc:comandBlock|H          ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.019      ;
; 0.742 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.067      ; 0.961      ;
; 0.743 ; bc:comandBlock|H          ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.020      ;
; 0.744 ; bc:comandBlock|H          ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.021      ;
; 0.763 ; bc:comandBlock|H          ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 0.998      ;
; 0.764 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.071      ;
; 0.764 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.071      ;
; 0.764 ; bc:comandBlock|H          ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 0.999      ;
; 0.765 ; bc:comandBlock|state.0011 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 0.925      ;
; 0.766 ; bc:comandBlock|H          ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 1.001      ;
; 0.769 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.075      ; 0.996      ;
; 0.769 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.075      ; 0.996      ;
; 0.769 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.075      ; 0.996      ;
; 0.781 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.098      ;
; 0.782 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.099      ;
; 0.810 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 1.045      ;
; 0.810 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[9]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 1.045      ;
; 0.810 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[10] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.083      ; 1.045      ;
; 0.812 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.129      ;
; 0.815 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.165      ; 1.132      ;
; 0.820 ; bc:comandBlock|state.0000 ; bc:comandBlock|M0[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 0.980      ;
; 0.820 ; bc:comandBlock|state.0000 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 0.980      ;
; 0.823 ; bc:comandBlock|state.0000 ; bc:comandBlock|LH         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 0.983      ;
; 0.829 ; bc:comandBlock|state.0000 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 0.989      ;
; 0.830 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.137      ;
; 0.832 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.139      ;
; 0.833 ; bc:comandBlock|state.0010 ; bc:comandBlock|H          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.258      ; 1.243      ;
; 0.838 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.145      ;
; 0.842 ; bc:comandBlock|flag       ; bo:operatorBlock|regS[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.155      ; 1.149      ;
; 0.855 ; bc:comandBlock|H          ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.132      ;
; 0.855 ; bc:comandBlock|H          ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.132      ;
; 0.857 ; bc:comandBlock|H          ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.134      ;
; 0.862 ; bc:comandBlock|H          ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.139      ;
; 0.862 ; bc:comandBlock|H          ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.139      ;
; 0.864 ; bc:comandBlock|H          ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.141      ;
; 0.889 ; bc:comandBlock|state.0011 ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 1.049      ;
; 0.891 ; bc:comandBlock|state.0000 ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.008      ; 1.051      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[4]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[6]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[13] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[14] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.894 ; bc:comandBlock|LH         ; bo:operatorBlock|regH[15] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.118      ; 1.164      ;
; 0.901 ; bc:comandBlock|M2[1]      ; bc:comandBlock|M2[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.053      ;
; 0.905 ; bc:comandBlock|M1[1]      ; bc:comandBlock|M1[1]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.057      ;
; 0.961 ; bo:operatorBlock|regX[0]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.111      ; 1.224      ;
; 0.961 ; bo:operatorBlock|regX[0]  ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.111      ; 1.224      ;
; 0.962 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regH[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.111      ; 1.225      ;
; 0.962 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.111      ; 1.225      ;
; 0.966 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[2]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.014      ; 1.132      ;
; 0.966 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[1]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.014      ; 1.132      ;
; 0.966 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[0]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.014      ; 1.132      ;
; 0.966 ; bc:comandBlock|LX         ; bo:operatorBlock|regX[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.014      ; 1.132      ;
; 0.977 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regH[3]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.111      ; 1.240      ;
; 0.979 ; bo:operatorBlock|regX[0]  ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.101      ; 1.232      ;
; 0.980 ; bo:operatorBlock|regX[0]  ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.101      ; 1.233      ;
; 0.980 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regS[5]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.101      ; 1.233      ;
; 0.981 ; bo:operatorBlock|regX[3]  ; bo:operatorBlock|regS[7]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.101      ; 1.234      ;
; 0.984 ; bc:comandBlock|state.0101 ; bc:comandBlock|M1[0]      ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.265      ; 1.401      ;
; 0.997 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[8]  ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.274      ;
; 0.997 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[11] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.274      ;
; 0.997 ; bc:comandBlock|LS         ; bo:operatorBlock|regS[12] ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.125      ; 1.274      ;
+-------+---------------------------+---------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'KEY[0]'                                                                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|H          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LH         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LS         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|LX         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M0[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M1[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|M2[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|flag       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|flag       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0000 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0000 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0001 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0010 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0011 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0100 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0101 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0110 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bc:comandBlock|state.0111 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bc:comandBlock|state.0111 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regH[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Rise       ; bo:operatorBlock|regS[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Rise       ; bo:operatorBlock|regS[9]  ;
+--------+--------------+----------------+------------------+--------+------------+---------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 1.083  ; 1.083  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.252 ; -0.252 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; -0.109 ; -0.109 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.256 ; -0.256 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -0.329 ; -0.329 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 1.083  ; 1.083  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 0.449 ; 0.449 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.372 ; 0.372 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.229 ; 0.229 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.376 ; 0.376 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 0.449 ; 0.449 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 0.165 ; 0.165 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 12.268 ; 12.268 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 12.086 ; 12.086 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 12.121 ; 12.121 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 12.253 ; 12.253 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 12.198 ; 12.198 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 12.265 ; 12.265 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 12.268 ; 12.268 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 12.262 ; 12.262 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 12.819 ; 12.819 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 12.460 ; 12.460 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 12.654 ; 12.654 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 12.653 ; 12.653 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 12.660 ; 12.660 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 12.667 ; 12.667 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 12.760 ; 12.760 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 12.819 ; 12.819 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 12.248 ; 12.248 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 12.100 ; 12.100 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 12.120 ; 12.120 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 12.145 ; 12.145 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 12.153 ; 12.153 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 12.133 ; 12.133 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 12.118 ; 12.118 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 12.248 ; 12.248 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 11.298 ; 11.298 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 11.297 ; 11.297 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 11.282 ; 11.282 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 11.261 ; 11.261 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 11.298 ; 11.298 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 4.651 ; 4.651 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 4.651 ; 4.651 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 4.680 ; 4.680 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 4.803 ; 4.803 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 4.747 ; 4.747 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 4.832 ; 4.832 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 4.820 ; 4.820 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 5.961 ; 5.961 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 5.965 ; 5.965 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 5.963 ; 5.963 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 5.961 ; 5.961 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 5.973 ; 5.973 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 5.978 ; 5.978 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 6.068 ; 6.068 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 6.131 ; 6.131 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 6.215 ; 6.215 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 6.215 ; 6.215 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 6.235 ; 6.235 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 6.267 ; 6.267 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 6.264 ; 6.264 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 6.246 ; 6.246 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 6.241 ; 6.241 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 6.360 ; 6.360 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 6.277 ; 6.277 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 6.313 ; 6.313 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 6.298 ; 6.298 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 6.277 ; 6.277 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 6.314 ; 6.314 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -6.698   ; 0.215 ; N/A      ; N/A     ; -1.469              ;
;  KEY[0]          ; -6.698   ; 0.215 ; N/A      ; N/A     ; -1.469              ;
; Design-wide TNS  ; -248.334 ; 0.0   ; 0.0      ; 0.0     ; -67.457             ;
;  KEY[0]          ; -248.334 ; 0.000 ; N/A      ; N/A     ; -67.457             ;
+------------------+----------+-------+----------+---------+---------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 2.853  ; 2.853  ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; -0.252 ; -0.252 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.050  ; 0.050  ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; -0.256 ; -0.256 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -0.329 ; -0.329 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 2.853  ; 2.853  ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Hold Times                                                            ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; SW[*]     ; KEY[0]     ; 0.790 ; 0.790 ; Rise       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.652 ; 0.652 ; Rise       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.229 ; 0.229 ; Rise       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.664 ; 0.664 ; Rise       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 0.790 ; 0.790 ; Rise       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 0.165 ; 0.165 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Clock to Output Times                                                   ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 31.266 ; 31.266 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 30.870 ; 30.870 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 30.902 ; 30.902 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 31.246 ; 31.246 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 31.129 ; 31.129 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 31.265 ; 31.265 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 31.266 ; 31.266 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 31.260 ; 31.260 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 32.756 ; 32.756 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 31.800 ; 31.800 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 32.374 ; 32.374 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 32.369 ; 32.369 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 32.383 ; 32.383 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 32.387 ; 32.387 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 32.629 ; 32.629 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 32.756 ; 32.756 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 31.125 ; 31.125 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 30.780 ; 30.780 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 30.808 ; 30.808 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 30.825 ; 30.825 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 30.835 ; 30.835 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 30.815 ; 30.815 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 30.799 ; 30.799 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 31.125 ; 31.125 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 28.475 ; 28.475 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 28.453 ; 28.453 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 28.492 ; 28.492 ; Rise       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; HEX0[*]   ; KEY[0]     ; 4.651 ; 4.651 ; Rise       ; KEY[0]          ;
;  HEX0[0]  ; KEY[0]     ; 4.651 ; 4.651 ; Rise       ; KEY[0]          ;
;  HEX0[1]  ; KEY[0]     ; 4.680 ; 4.680 ; Rise       ; KEY[0]          ;
;  HEX0[2]  ; KEY[0]     ; 4.803 ; 4.803 ; Rise       ; KEY[0]          ;
;  HEX0[3]  ; KEY[0]     ; 4.747 ; 4.747 ; Rise       ; KEY[0]          ;
;  HEX0[4]  ; KEY[0]     ; 4.832 ; 4.832 ; Rise       ; KEY[0]          ;
;  HEX0[5]  ; KEY[0]     ; 4.820 ; 4.820 ; Rise       ; KEY[0]          ;
;  HEX0[6]  ; KEY[0]     ; 4.828 ; 4.828 ; Rise       ; KEY[0]          ;
; HEX1[*]   ; KEY[0]     ; 5.961 ; 5.961 ; Rise       ; KEY[0]          ;
;  HEX1[0]  ; KEY[0]     ; 5.965 ; 5.965 ; Rise       ; KEY[0]          ;
;  HEX1[1]  ; KEY[0]     ; 5.963 ; 5.963 ; Rise       ; KEY[0]          ;
;  HEX1[2]  ; KEY[0]     ; 5.961 ; 5.961 ; Rise       ; KEY[0]          ;
;  HEX1[3]  ; KEY[0]     ; 5.973 ; 5.973 ; Rise       ; KEY[0]          ;
;  HEX1[4]  ; KEY[0]     ; 5.978 ; 5.978 ; Rise       ; KEY[0]          ;
;  HEX1[5]  ; KEY[0]     ; 6.068 ; 6.068 ; Rise       ; KEY[0]          ;
;  HEX1[6]  ; KEY[0]     ; 6.131 ; 6.131 ; Rise       ; KEY[0]          ;
; HEX2[*]   ; KEY[0]     ; 6.215 ; 6.215 ; Rise       ; KEY[0]          ;
;  HEX2[0]  ; KEY[0]     ; 6.215 ; 6.215 ; Rise       ; KEY[0]          ;
;  HEX2[1]  ; KEY[0]     ; 6.235 ; 6.235 ; Rise       ; KEY[0]          ;
;  HEX2[2]  ; KEY[0]     ; 6.267 ; 6.267 ; Rise       ; KEY[0]          ;
;  HEX2[3]  ; KEY[0]     ; 6.264 ; 6.264 ; Rise       ; KEY[0]          ;
;  HEX2[4]  ; KEY[0]     ; 6.246 ; 6.246 ; Rise       ; KEY[0]          ;
;  HEX2[5]  ; KEY[0]     ; 6.241 ; 6.241 ; Rise       ; KEY[0]          ;
;  HEX2[6]  ; KEY[0]     ; 6.360 ; 6.360 ; Rise       ; KEY[0]          ;
; HEX3[*]   ; KEY[0]     ; 6.277 ; 6.277 ; Rise       ; KEY[0]          ;
;  HEX3[0]  ; KEY[0]     ; 6.313 ; 6.313 ; Rise       ; KEY[0]          ;
;  HEX3[3]  ; KEY[0]     ; 6.298 ; 6.298 ; Rise       ; KEY[0]          ;
;  HEX3[4]  ; KEY[0]     ; 6.277 ; 6.277 ; Rise       ; KEY[0]          ;
;  HEX3[5]  ; KEY[0]     ; 6.314 ; 6.314 ; Rise       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 4466     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 4466     ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 5     ; 5    ;
; Unconstrained Input Port Paths  ; 22    ; 22   ;
; Unconstrained Output Ports      ; 25    ; 25   ;
; Unconstrained Output Port Paths ; 217   ; 217  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Tue Feb 07 21:45:56 2023
Info: Command: quartus_sta Tarefa4 -c Tarefa4
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Tarefa4.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name KEY[0] KEY[0]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -6.698
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -6.698      -248.334 KEY[0] 
Info (332146): Worst-case hold slack is 0.445
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.445         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469       -67.457 KEY[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.470
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.470       -41.320 KEY[0] 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -55.222 KEY[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 4539 megabytes
    Info: Processing ended: Tue Feb 07 21:45:56 2023
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:01


